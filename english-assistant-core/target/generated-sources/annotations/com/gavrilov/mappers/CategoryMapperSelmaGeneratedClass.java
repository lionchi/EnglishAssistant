// GENERATED BY S3LM4
package com.gavrilov.mappers;


public final class CategoryMapperSelmaGeneratedClass
    implements CategoryMapper {

  @Override
  public final com.gavrilov.dto.CategoryDTO asCategoryDTO(com.gavrilov.domain.Category inCategory) {
    com.gavrilov.dto.CategoryDTO out = null;
    if (inCategory != null) {
      out = new com.gavrilov.dto.CategoryDTO();
      out.setId(inCategory.getId());
      out.setNameCategory(inCategory.getNameCategory());
    }
    return out;
  }


  @Override
  public final com.gavrilov.domain.Category asCategory(com.gavrilov.dto.CategoryDTO inCategoryDTO) {
    com.gavrilov.domain.Category out = null;
    if (inCategoryDTO != null) {
      out = new com.gavrilov.domain.Category();
      out.setId(inCategoryDTO.getId());
      out.setNameCategory(inCategoryDTO.getNameCategory());
    }
    return out;
  }



  /**
   * This field is used for custom Mapping
   */
  private CategoryCustomMapper customMapperCategoryCustomMapper;

  /**
   * Custom Mapper setter for customMapperCategoryCustomMapper
   */
  public final void setCustomMapperCategoryCustomMapper(CategoryCustomMapper mapper) {
    this.customMapperCategoryCustomMapper = mapper;
  }


  /**
   * Single constructor
   */
  public CategoryMapperSelmaGeneratedClass() {
    this.customMapperCategoryCustomMapper = new com.gavrilov.mappers.CategoryCustomMapper();
  }

}
