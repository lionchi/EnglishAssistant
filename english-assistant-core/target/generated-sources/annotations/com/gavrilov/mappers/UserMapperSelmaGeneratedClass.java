// GENERATED BY S3LM4
package com.gavrilov.mappers;


public final class UserMapperSelmaGeneratedClass
    implements UserMapper {

  @Override
  public final com.gavrilov.dto.UserDTO asUserDTO(com.gavrilov.domain.User inUser) {
    com.gavrilov.dto.UserDTO out = null;
    if (inUser != null) {
      out = new com.gavrilov.dto.UserDTO();
      out.setEnabled(inUser.getEnabled());
      out.setFio(inUser.getFio());
      out.setId(inUser.getId());
      out.setLogin(inUser.getLogin());
      out.setPassword(inUser.getPassword());
      if (inUser.getUserRole() != null) {
        out.setUserRoleId(inUser.getUserRole().getId());
      }
    }
    return out;
  }


  @Override
  public final com.gavrilov.domain.User asUser(com.gavrilov.dto.UserDTO inUserDTO) {
    com.gavrilov.domain.User out = null;
    if (inUserDTO != null) {
      out = new com.gavrilov.domain.User();
      out.setEnabled(inUserDTO.getEnabled());
      out.setFio(inUserDTO.getFio());
      out.setId(inUserDTO.getId());
      out.setLogin(inUserDTO.getLogin());
      out.setPassword(inUserDTO.getPassword());
      if (inUserDTO.getUserRoleId() != null) {
        if (out.getUserRole() == null) {
          out.setUserRole(new com.gavrilov.domain.UserRole());
        }
        out.getUserRole().setId(inUserDTO.getUserRoleId());
      }
    }
    return out;
  }



  /**
   * This field is used for custom Mapping
   */
  private UserCustomMapper customMapperUserCustomMapper;

  /**
   * Custom Mapper setter for customMapperUserCustomMapper
   */
  public final void setCustomMapperUserCustomMapper(UserCustomMapper mapper) {
    this.customMapperUserCustomMapper = mapper;
  }


  /**
   * Single constructor
   */
  public UserMapperSelmaGeneratedClass() {
    this.customMapperUserCustomMapper = new com.gavrilov.mappers.UserCustomMapper();
  }

}
