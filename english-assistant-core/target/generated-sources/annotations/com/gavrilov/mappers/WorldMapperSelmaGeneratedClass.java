// GENERATED BY S3LM4
package com.gavrilov.mappers;


public final class WorldMapperSelmaGeneratedClass
    implements WorldMapper {

  @Override
  public final com.gavrilov.dto.WorldDTO asWorldDTO(com.gavrilov.domain.World inWorld) {
    com.gavrilov.dto.WorldDTO out = null;
    if (inWorld != null) {
      out = new com.gavrilov.dto.WorldDTO();
      out.setId(inWorld.getId());
      out.setTranslation(inWorld.getTranslation());
      out.setValue(inWorld.getValue());
      if (inWorld.getCategory() != null) {
        out.setNameCategory(inWorld.getCategory().getNameCategory());
      }
      if (inWorld.getCategory() != null) {
        out.setCategoryId(inWorld.getCategory().getId());
      }
      if (inWorld.getUser() != null) {
        out.setUserId(inWorld.getUser().getId());
      }
    }
    return out;
  }


  @Override
  public final com.gavrilov.domain.World asWorld(com.gavrilov.dto.WorldDTO inWorldDTO) {
    com.gavrilov.domain.World out = null;
    if (inWorldDTO != null) {
      out = new com.gavrilov.domain.World();
      out.setId(inWorldDTO.getId());
      out.setTranslation(inWorldDTO.getTranslation());
      out.setValue(inWorldDTO.getValue());
      if (inWorldDTO.getCategoryId() != null) {
        if (out.getCategory() == null) {
          out.setCategory(new com.gavrilov.domain.Category());
        }
        out.getCategory().setId(inWorldDTO.getCategoryId());
      }
      if (inWorldDTO.getNameCategory() != null) {
        if (out.getCategory() == null) {
          out.setCategory(new com.gavrilov.domain.Category());
        }
        out.getCategory().setNameCategory(inWorldDTO.getNameCategory());
      }
      if (inWorldDTO.getUserId() != null) {
        if (out.getUser() == null) {
          out.setUser(new com.gavrilov.domain.User());
        }
        out.getUser().setId(inWorldDTO.getUserId());
      }
    }
    return out;
  }



  /**
   * This field is used for custom Mapping
   */
  private UserCustomMapper customMapperUserCustomMapper;

  /**
   * Custom Mapper setter for customMapperUserCustomMapper
   */
  public final void setCustomMapperUserCustomMapper(UserCustomMapper mapper) {
    this.customMapperUserCustomMapper = mapper;
  }


  /**
   * Single constructor
   */
  public WorldMapperSelmaGeneratedClass() {
    this.customMapperUserCustomMapper = new com.gavrilov.mappers.UserCustomMapper();
  }

}
